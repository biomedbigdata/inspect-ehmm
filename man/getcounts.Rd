% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getcounts.R
\name{getcounts}
\alias{getcounts}
\title{Make a count matrix}
\usage{
getcounts(regions, bamtab, binsize = 200, repFun = defaultRepFun,
  nthreads = 1)
}
\arguments{
\item{regions}{GRanges object containing the genomic regions of interest.
Each region will be divided into non-overlapping bins of equal size.
The reads falling in each bin will be the elements of the final count matrix.}

\item{bamtab}{Data frame describing how to get the counts from each file. 
The following columns are required: 'mark' (name of the histone mark),
'path' (path to the bam file). The following columns are optional:
'mapq' (minimum mapping quality), 'shift' (shift in the 3' to 5' direction
applied to each read), 'pairedend' (paired end mode or not)}

\item{binsize}{The size of each bin in basepairs. Each region must have
a width multiple of \code{binsize}, otherwise an error will be thrown.
Use the function \code{refineRegions} to make sure that your GRanges object
satisfies this constraint.}

\item{repFun}{In case there are replicate experiments (i.e. entries in
bampath with the same 'mark' name), they will be collapsed into 
one experiment using this function. This function takes a matrix of 
counts as input where the columns are different experiments 
and the rows are different bins and returns a vector with as many elements
as the rows of the input matrix.}

\item{nthreads}{Number of threads. Parallelization is done on the histone
marks using \code{mclapply}.}
}
\value{
A count matrix where the rows are the different marks
    labelled with the names of the list \code{marks}, and the columns
    are the different bins in the regions.
}
\description{
Make a count matrix from a GRanges object and a list of bam files
}

